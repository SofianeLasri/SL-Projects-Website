variables:
  MARIADB_DATABASE: "sl_projects_test_main"
  MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: "yes"
  MAIN_DB_HOST: "mariadb"
  MAIN_DB_USERNAME: "root"
  SC_DB_HOST: "mariadb"
  SC_DB_USERNAME: "root"
  MAIN_DB_DATABASE: sl_projects_test_main
  SC_DB_DATABASE: sl_projects_test_showcase

default:
  image: registry.gitlab.sl-projects.com/sl-projects/sl-projects-website:latest
  services:
    - mariadb:10.11

stages:
  - test
  - deploy
  - purgecache

unit_test:
  stage: test
  before_script:
    - apt-get update -q && apt-get install -qqy --no-install-recommends mariadb-client
    - echo "CREATE DATABASE IF NOT EXISTS sl_projects_test_showcase;" | mariadb -u root -h mariadb
    - echo "127.0.0.1 api.sl-projects.local" >> /etc/hosts
    - echo "127.0.0.1 sl-projects.local" >> /etc/hosts
    - echo "127.0.0.1 blog.sl-projects.local" >> /etc/hosts
    - echo "127.0.0.1 dashboard.sl-projects.local" >> /etc/hosts
    - echo "127.0.0.1 auth.sl-projects.local" >> /etc/hosts
    - echo "127.0.0.1 sofianelasri.local" >> /etc/hosts
    - sed -i 's@/var/www@/builds/sl-projects/sl-projects-website@g' /etc/apache2/sites-available/000-default.conf
    - service apache2 start
  script:
    - cp .env.testing .env
    - composer install
    - php artisan key:generate
    - php artisan migrate
    - php artisan dusk:chrome-driver --all
    - npm install
    - npm run build
    - chmod -R 0755 vendor/laravel/dusk/bin/
    - chmod -R 777 /builds
    - chown -R www-data:www-data /builds
    - curl http://sl-projects.local
    - vendor/bin/phpunit

deploy_production:
  stage: deploy
  script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ~/.composer/vendor/bin/envoy run deploy --commit="$CI_COMMIT_SHA"
  environment:
    name: production
    url: https://sofianelasri.fr
  when: on_success
  rules:
    - if: $CI_COMMIT_BRANCH == "main"

purgecache:
  image: docker:stable
  stage: purgecache
  before_script:
    - apk add --update curl && rm -rf /var/cache/apk/*
  script:
    - |
      curl -X GET "https://api.cloudflare.com/client/v4/user/tokens/verify" \
      -H "Authorization: Bearer $CF_API_TOKEN" \
      -H "Content-Type:application/json"
